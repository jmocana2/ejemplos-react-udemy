{"version":3,"sources":["componentes/Header.js","componentes/Noticia.js","componentes/Noticias.js","componentes/Formulario.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","href","Noticia","props","_props$noticia","noticia","urlToImage","url","title","description","source","src","alt","name","target","rel","Noticias","noticias","this","map","componentes_Noticia","key","Component","Formulario","categoriaRef","React","createRef","consultarCategoria","e","preventDefault","consultarNoticia","_this","current","value","onSubmit","ref","defaultValue","type","App","state","categoria","arguments","length","undefined","concat","fetch","then","respuesta","json","setState","articles","componentes_Header","componentes_Formulario","componentes_Noticias","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f817b4e2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <nav>\r\n      <div className=\"nav-wrapper light-blue darken-3\">\r\n        <a href=\"https://newsapi.org/\" className=\"brand-logo\">Noticias</a>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Noticia = (props) => {\r\n\r\n  const {urlToImage, url, title, description, source} = props.noticia;\r\n\r\n  return (\r\n    <div className=\"col s12 m6 l4\">\r\n      <div className=\"card\">\r\n        <div className=\"card-image\">\r\n          {urlToImage &&\r\n            <img src={urlToImage} alt={title}/>\r\n          }\r\n          <span className=\"card-title\">{source.name}</span>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <h3 className=\"title\">{title}</h3>\r\n          <p className=\"description\">{description}</p>\r\n        </div>\r\n        <div className=\"card-action\">\r\n          <a href={url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"waves-effects waves-light btn\">Noticia completa</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n      \r\n  \r\n  );\r\n};\r\n\r\nexport default Noticia;","import React, { Component } from 'react';\r\nimport Noticia from './Noticia';\r\n\r\nclass Noticias extends Component {\r\n    render() {\r\n\r\n        const {noticias} = this.props\r\n\r\n        return (\r\n            <div className=\"row\">\r\n             \r\n                {noticias.map((noticia) => \r\n                   <Noticia key={noticia.url} noticia={noticia} />\r\n                )}                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Noticias;","import React, { Component } from 'react';\r\n\r\nclass Formulario extends Component {\r\n\r\n  categoriaRef = React.createRef();\r\n\r\n  consultarCategoria = (e) => {\r\n    e.preventDefault();\r\n    const {consultarNoticia} = this.props\r\n\r\n    consultarNoticia(this.categoriaRef.current.value)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"buscador row\">\r\n        <div className=\"col s12 m8 offset-m2\">\r\n          <form onSubmit={this.consultarCategoria}>\r\n            <h2>Noticias por categor√≠a</h2>\r\n            <div className=\"input-field col s12 m8\">\r\n              <select ref={this.categoriaRef}>\r\n                <option value=\"general\" defaultValue>General</option>\r\n                <option value=\"business\">Business</option>\r\n                <option value=\"entertainment\">Entertainment</option>\r\n                <option value=\"health\">Health</option>\r\n                <option value=\"science\">Science</option>\r\n                <option value=\"sports\">Sports</option>\r\n                <option value=\"technology\">Technology</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"input-field col s12 m4 enviar\">\r\n              <input type=\"submit\" className=\"btn amber darken-2\" value=\"Buscar\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Formulario;","import React, { Component } from 'react';\r\nimport Header from './componentes/Header';\r\nimport Noticias from './componentes/Noticias';\r\nimport Formulario from './componentes/Formulario';\r\n\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    noticias: []\r\n  }\r\n\r\n  componentDidMount(){\r\n     this.consultarNoticia();\r\n  }\r\n\r\n  consultarNoticia = (categoria = \"general\") => {\r\n    const API_KEY = '4305bf24ee154ac09a491f24a5d249a8';\r\n    const url = `https://newsapi.org/v2/top-headlines?country=gb&category=${categoria}&apiKey=${API_KEY}`;\r\n\r\n    fetch(url)\r\n      .then((respuesta) =>{\r\n        return respuesta.json()\r\n      })\r\n      .then((noticias) => {\r\n        this.setState({\r\n          noticias: noticias.articles\r\n        })\r\n      })\r\n  }\r\n\r\n  render() {    \r\n\r\n    const { noticias } = this.state\r\n\r\n    return (      \r\n      <div className=\"contenedor-app\">\r\n        <Header />    \r\n        <div className=\"container white contenedor-noticias\">\r\n          <Formulario consultarNoticia = {this.consultarNoticia} />\r\n          <Noticias noticias = {noticias} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}